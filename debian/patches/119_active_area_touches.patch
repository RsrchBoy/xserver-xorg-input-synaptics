From 5c209f9bbb3a786b247ecbc613b7f27435dd3033 Mon Sep 17 00:00:00 2001
From: Chase Douglas <chase.douglas@canonical.com>
Date: Tue, 29 Mar 2011 10:17:27 -0400
Subject: [PATCH 1/3] Don't process touches outside active area

Signed-off-by: Chase Douglas <chase.douglas@canonical.com>
---
 src/eventcomm.c |   28 ++++++++++++++++++++++++----
 src/synaptics.c |    2 +-
 src/synproto.h  |    2 ++
 3 files changed, 27 insertions(+), 5 deletions(-)

diff --git a/src/eventcomm.c b/src/eventcomm.c
index 10c9668..bb22f55 100644
--- a/src/eventcomm.c
+++ b/src/eventcomm.c
@@ -447,7 +447,10 @@ ProcessTouch(InputInfoPtr pInfo, SynapticsPrivate *priv)
 
     if (!priv->has_touch || ecpriv->cur_slot < 0 ||
         ecpriv->mt_slot_map[ecpriv->cur_slot] == (uint32_t)-1)
+    {
+        valuator_mask_zero(ecpriv->touch_mask);
         return;
+    }
 
     if (ecpriv->close_slot)
     {  
@@ -459,10 +462,27 @@ ProcessTouch(InputInfoPtr pInfo, SynapticsPrivate *priv)
     }
     else
     {
-        uint16_t type = ecpriv->new_touch ? XI_TouchBegin : XI_TouchUpdate;
+        if (ecpriv->new_touch)
+        {
+            int x_axis = ecpriv->mt_axis_map[ABS_MT_POSITION_X - ABS_MT_TOUCH_MAJOR];
+            int y_axis = ecpriv->mt_axis_map[ABS_MT_POSITION_Y - ABS_MT_TOUCH_MAJOR];
+            int x = valuator_mask_get(ecpriv->touch_mask, x_axis);
+            int y = valuator_mask_get(ecpriv->touch_mask, y_axis);
+
+            if (is_inside_active_area(priv, x, y))
+                xf86PostTouchEvent(pInfo->dev,
+                                   ecpriv->mt_slot_map[ecpriv->cur_slot],
+                                   XI_TouchBegin, 0, ecpriv->touch_mask);
+            else
+                ecpriv->mt_slot_map[ecpriv->cur_slot] = -1;
+        }
+        else
+        {
+            xf86PostTouchEvent(pInfo->dev,
+                               ecpriv->mt_slot_map[ecpriv->cur_slot],
+                               XI_TouchUpdate, 0, ecpriv->touch_mask);
+        }
 
-        xf86PostTouchEvent(pInfo->dev, ecpriv->mt_slot_map[ecpriv->cur_slot],
-                           type, 0, ecpriv->touch_mask);
         ecpriv->new_touch = FALSE;
     }
 
@@ -620,7 +640,7 @@ EventProcessEvent(InputInfoPtr pInfo, struct CommData *comm,
                                        ecpriv->cur_vals);
                 }
             }
-            else
+            else if (ecpriv->mt_slot_map[ecpriv->cur_slot] != (uint32_t)-1)
                 ecpriv->close_slot = TRUE;
             break;
         case ABS_MT_TOUCH_MAJOR:
diff --git a/src/synaptics.c b/src/synaptics.c
index ce06216..f4e440a 100644
--- a/src/synaptics.c
+++ b/src/synaptics.c
@@ -1188,7 +1188,7 @@ edge_detection(SynapticsPrivate *priv, int x, int y)
  * priv->synpara.area_{left|right|top|bottom}_edge are
  * all set to zero), the function returns TRUE.
  */
-static Bool
+Bool
 is_inside_active_area(SynapticsPrivate *priv, int x, int y)
 {
     Bool inside_area = TRUE;
diff --git a/src/synproto.h b/src/synproto.h
index 4f93d61..1702f2a 100644
--- a/src/synproto.h
+++ b/src/synproto.h
@@ -81,6 +81,7 @@ enum SynapticsProtocol {
 struct _SynapticsParameters;
 struct SynapticsHwInfo;
 struct CommData;
+struct _SynapticsPrivateRec;
 
 struct SynapticsProtocolOperations {
     int (*DevicePreInitHook)(InputDriverPtr drv, InputInfoPtr pInfo, int flags);
@@ -107,5 +108,6 @@ extern struct SynapticsProtocolOperations alps_proto_operations;
 
 extern int HandleState(InputInfoPtr, struct SynapticsHwState*);
 extern CARD32 timerFunc(OsTimerPtr timer, CARD32 now, pointer arg);
+extern Bool is_inside_active_area(struct _SynapticsPrivateRec *priv, int x, int y);
 
 #endif /* _SYNPROTO_H_ */
-- 
1.7.4.1

