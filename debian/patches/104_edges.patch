From d2f3a5a4bf9b2ba38a004e8137ce5b3bbb248f99 Mon Sep 17 00:00:00 2001
From: Peter Hutterer <peter.hutterer@redhat.com>
Date: Tue, 9 Sep 2008 00:27:36 +0930
Subject: [PATCH] Improve edge autodetection and accel.

The synaptics spec specifies "typical axis ranges" for synaptics devices.
Based on these typical ranges, calculate edge coordinates and apply the same
proportions to the device at hand.
Based on the hard-coded ranges and acceleration, calculate accel for
autodetected ranges in the same proportions.
---
 src/eventcomm.c    |   12 ++++----
 src/synaptics.c    |   82 ++++++++++++++++++++++++++++++++++++++++------------
 src/synapticsstr.h |    1 +
 3 files changed, 70 insertions(+), 25 deletions(-)

diff --git a/src/eventcomm.c b/src/eventcomm.c
index 6c37dbd..8474c54 100644
--- a/src/eventcomm.c
+++ b/src/eventcomm.c
@@ -108,11 +108,11 @@ event_query_is_touchpad(int fd)
     return TRUE;
 }
 
-/* Query device for axis ranges and store outcome in the default parameter. */
+/* Query device for axis ranges */
 static void
 event_query_axis_ranges(int fd, LocalDevicePtr local)
 {
-    SynapticsSHM *pars = &((SynapticsPrivate *)local->private)->synpara_default;
+    SynapticsPrivate *priv = (SynapticsPrivate *)local->private;
     struct input_absinfo abs;
     int rc;
 
@@ -121,8 +121,8 @@ event_query_axis_ranges(int fd, LocalDevicePtr local)
     {
 	xf86Msg(X_INFO, "%s: x-axis range %d - %d\n", local->name,
 		abs.minimum, abs.maximum);
-	pars->left_edge  = abs.minimum;
-	pars->right_edge = abs.maximum;
+	priv->minx = abs.minimum;
+	priv->maxx = abs.maximum;
     } else
 	xf86Msg(X_ERROR, "%s: failed to query axis range (%s)\n", local->name,
 		strerror(errno));
@@ -132,8 +132,8 @@ event_query_axis_ranges(int fd, LocalDevicePtr local)
     {
 	xf86Msg(X_INFO, "%s: y-axis range %d - %d\n", local->name,
 		abs.minimum, abs.maximum);
-	pars->top_edge    = abs.minimum;
-	pars->bottom_edge = abs.maximum;
+	priv->miny = abs.minimum;
+	priv->maxy = abs.maximum;
     } else
 	xf86Msg(X_ERROR, "%s: failed to query axis range (%s)\n", local->name,
 		strerror(errno));
diff --git a/src/synaptics.c b/src/synaptics.c
index 53d3290..dc5f9f0 100644
--- a/src/synaptics.c
+++ b/src/synaptics.c
@@ -13,6 +13,7 @@
  * Copyright © 2006 Christian Thaeter
  * Copyright © 2007 Joseph P. Skudlarek
  * Copyright © 2008 Fedor P. Goncharov
+ * Copyright © 2008 Red Hat, Inc.
  *
  * Permission to use, copy, modify, distribute, and sell this software
  * and its documentation for any purpose is hereby granted without
@@ -307,6 +308,10 @@ SynapticsPreInit(InputDriverPtr drv, IDevPtr dev, int flags)
     char *repeater;
     pointer opts;
     int status;
+    float minSpeed, maxSpeed;
+    int horizScrollDelta, vertScrollDelta,
+        edgeMotionMinSpeed, edgeMotionMaxSpeed;
+    int l, r, t, b; /* left, right, top, bottom */
 
     /* allocate memory for SynapticsPrivateRec */
     priv = xcalloc(1, sizeof(SynapticsPrivate));
@@ -349,14 +354,6 @@ SynapticsPreInit(InputDriverPtr drv, IDevPtr dev, int flags)
 
     xf86OptionListReport(opts);
 
-    /* set hard-coded axis ranges before querying the device.
-     * These defaults are overwritten with the ones provided by the device
-     * during SetDeviceAndProtocol (if applicable). */
-    priv->synpara_default.left_edge   = 1900;
-    priv->synpara_default.right_edge  = 5400;
-    priv->synpara_default.top_edge    = 1900;
-    priv->synpara_default.bottom_edge = 4000;
-
     SetDeviceAndProtocol(local);
 
     /* open the touchpad device */
@@ -383,11 +380,58 @@ SynapticsPreInit(InputDriverPtr drv, IDevPtr dev, int flags)
     /* read the parameters */
     pars = &priv->synpara_default;
     pars->version = (PACKAGE_VERSION_MAJOR*10000+PACKAGE_VERSION_MINOR*100+PACKAGE_VERSION_PATCHLEVEL);
-    /* pars->xyz_edge contains defaults or values reported by hardware*/
-    pars->left_edge = xf86SetIntOption(opts, "LeftEdge", pars->left_edge);
-    pars->right_edge = xf86SetIntOption(opts, "RightEdge", pars->right_edge);
-    pars->top_edge = xf86SetIntOption(opts, "TopEdge", pars->top_edge);
-    pars->bottom_edge = xf86SetIntOption(opts, "BottomEdge", pars->bottom_edge);
+
+    /* The synaptics specs specify typical edge widths of 4% on x, and 5.4% on
+     * y (page 7) [Synaptics TouchPad Interfacing Guide, 510-000080 - A
+     * Second Edition, http://www.synaptics.com/support/dev_support.cfm, 8 Sep
+     * 2008]
+     * If the range was autodetected, apply these edge widths to all four
+     * sides.
+     */
+    if (priv->maxx && priv->maxy)
+    {
+        int width, height;
+        int ewidth, eheight; /* edge width/height */
+
+        width = abs(priv->maxx - priv->minx);
+        height = abs(priv->maxy - priv->miny);
+        ewidth = width * .04;
+        eheight = height * .055;
+
+        l = priv->minx + ewidth;
+        r = priv->maxx - ewidth;
+        t = priv->miny + eheight;
+        b = priv->maxy - eheight;
+
+        /* Default min/max speed are 0.09/0.18. Assuming we have a device that
+         * reports height 3040 (typical y range in synaptics specs) this gives
+         * us the same result. */
+        minSpeed = 273.0/height;
+        maxSpeed = 547.0/height;
+
+        /* Again, based on typical x/y range and defaults */
+        horizScrollDelta = width * .025;
+        vertScrollDelta = height * .04;
+        edgeMotionMinSpeed = 1;
+        edgeMotionMaxSpeed = width * .1;
+    } else {
+        l = 1900;
+        r = 5400;
+        t = 1900;
+        b = 4000;
+        minSpeed = 0.09;
+        maxSpeed = 0.18;
+
+        horizScrollDelta = 100;
+        vertScrollDelta = 100;
+        edgeMotionMinSpeed = 1;
+        edgeMotionMaxSpeed = 400;
+    }
+
+    pars->left_edge = xf86SetIntOption(opts, "LeftEdge", l);
+    pars->right_edge = xf86SetIntOption(opts, "RightEdge", r);
+    pars->top_edge = xf86SetIntOption(opts, "TopEdge", t);
+    pars->bottom_edge = xf86SetIntOption(opts, "BottomEdge", b);
 
     pars->finger_low = xf86SetIntOption(opts, "FingerLow", 25);
     pars->finger_high = xf86SetIntOption(opts, "FingerHigh", 30);
@@ -399,8 +443,8 @@ SynapticsPreInit(InputDriverPtr drv, IDevPtr dev, int flags)
     pars->fast_taps = xf86SetIntOption(opts, "FastTaps", FALSE);
     pars->emulate_mid_button_time = xf86SetIntOption(opts, "EmulateMidButtonTime", 75);
     pars->emulate_twofinger_z = xf86SetIntOption(opts, "EmulateTwoFingerMinZ", 257);
-    pars->scroll_dist_vert = xf86SetIntOption(opts, "VertScrollDelta", 100);
-    pars->scroll_dist_horiz = xf86SetIntOption(opts, "HorizScrollDelta", 100);
+    pars->scroll_dist_vert = xf86SetIntOption(opts, "VertScrollDelta", horizScrollDelta);
+    pars->scroll_dist_horiz = xf86SetIntOption(opts, "HorizScrollDelta", vertScrollDelta);
     pars->scroll_edge_vert = xf86SetBoolOption(opts, "VertEdgeScroll", TRUE);
     pars->special_scroll_area_right  = xf86SetBoolOption(opts, "SpecialScrollAreaRight", TRUE);
     pars->scroll_edge_horiz = xf86SetBoolOption(opts, "HorizEdgeScroll", TRUE);
@@ -409,8 +453,8 @@ SynapticsPreInit(InputDriverPtr drv, IDevPtr dev, int flags)
     pars->scroll_twofinger_horiz = xf86SetBoolOption(opts, "HorizTwoFingerScroll", FALSE);
     pars->edge_motion_min_z = xf86SetIntOption(opts, "EdgeMotionMinZ", 30);
     pars->edge_motion_max_z = xf86SetIntOption(opts, "EdgeMotionMaxZ", 160);
-    pars->edge_motion_min_speed = xf86SetIntOption(opts, "EdgeMotionMinSpeed", 1);
-    pars->edge_motion_max_speed = xf86SetIntOption(opts, "EdgeMotionMaxSpeed", 400);
+    pars->edge_motion_min_speed = xf86SetIntOption(opts, "EdgeMotionMinSpeed", edgeMotionMinSpeed);
+    pars->edge_motion_max_speed = xf86SetIntOption(opts, "EdgeMotionMaxSpeed", edgeMotionMaxSpeed);
     pars->edge_motion_use_always = xf86SetBoolOption(opts, "EdgeMotionUseAlways", FALSE);
     repeater = xf86SetStrOption(opts, "Repeater", NULL);
     pars->updown_button_scrolling = xf86SetBoolOption(opts, "UpDownScrolling", TRUE);
@@ -442,8 +486,8 @@ SynapticsPreInit(InputDriverPtr drv, IDevPtr dev, int flags)
     pars->press_motion_min_z = xf86SetIntOption(opts, "PressureMotionMinZ", pars->edge_motion_min_z);
     pars->press_motion_max_z = xf86SetIntOption(opts, "PressureMotionMaxZ", pars->edge_motion_max_z);
 
-    pars->min_speed = synSetFloatOption(opts, "MinSpeed", 0.09);
-    pars->max_speed = synSetFloatOption(opts, "MaxSpeed", 0.18);
+    pars->min_speed = synSetFloatOption(opts, "MinSpeed", minSpeed);
+    pars->max_speed = synSetFloatOption(opts, "MaxSpeed", maxSpeed);
     pars->accl = synSetFloatOption(opts, "AccelFactor", 0.0015);
     pars->trackstick_speed = synSetFloatOption(opts, "TrackstickSpeed", 40);
     pars->scroll_dist_circ = synSetFloatOption(opts, "CircScrollDelta", 0.1);
diff --git a/src/synapticsstr.h b/src/synapticsstr.h
index 5d61d0e..e5dd780 100644
--- a/src/synapticsstr.h
+++ b/src/synapticsstr.h
@@ -139,6 +139,7 @@ typedef struct _SynapticsPrivateRec
     int prev_z;				/* previous z value, for palm detection */
     int avg_width;			/* weighted average of previous fingerWidth values */
 
+    int minx, maxx, miny, maxy;         /* min/max dimensions as detected */
 } SynapticsPrivate;
 
 #endif /* _SYNAPTICSSTR_H_ */
-- 
1.6.0.1

